# server配置
server:
  port: 8081
  servlet:
    context-path: /

# druid 连接池
spring:
  application:
    name: headline-backend-ai
  datasource:
    # 连接池类型
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url: jdbc:mysql://localhost:3306/headline-news
      username: root
      password: 123456
      driver-class-name: com.mysql.cj.jdbc.Driver
  ai:
    openai:
      api-key: sk-RDmvMXMyT5ttIUvN9e811a79F733484a83C5A204C0F7013a
      base-url: https://api.xty.app
      chat:
        api-key: sk-RDmvMXMyT5ttIUvN9e811a79F733484a83C5A204C0F7013a
        base-url: https://api.xty.app
        options:
          model: gpt-3.5-turbo
          temperature: 0.7

# mybatis-plus的配置
mybatis-plus:
  type-aliases-package: com.example.pojo.vo,com.example.pojo.dto,com.example.pojo.entity
  global-config:
    db-config:
      logic-delete-field: isDeleted  #全局逻辑删除 有默认值
      id-type: auto  # 主键策略自增长
      table-prefix: news_ # 设置表的前缀
  # 详细输出sql语句和sql语句执行结果
  #  configuration:
  #    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

  # log4j日志的配置 需要导入lombok依赖
  # 就是log4j的形式输出,而不是控制台打印了,并且只输出SQL语句,如果debug调高级别,SQL语句也可以不输出。
  # 定义不同Java包的日志记录级别,输出简易日志信息
  # 如果mapper层出现了问题,由于其日志级别设置为debug,开发者可以查看更详细的日志信息来定位问题
  # 而对于service和controller层,使用info级别可以保持日志的清晰,同时记录足够的信息以供监控应用程序的运行情况
logging:
  level:
    com:
      example:
        mapper: debug
        service: info
        controller: info
#jwt配置
jwt:
  token:
    tokenExpiration: 120 # 有效时间,单位分钟
    tokenSignKey: headline123456  # 当前程序签名秘钥(自定义)